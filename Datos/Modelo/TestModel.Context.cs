//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos.Modelo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestEntities : DbContext
    {
        public TestEntities()
            : base("name=TestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Direccion> Direccions { get; set; }
        public virtual DbSet<Prestamo> Prestamoes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<vw_cantidad_prestamo_estado> vw_cantidad_prestamo_estado { get; set; }
        public virtual DbSet<vw_clientes> vw_clientes { get; set; }
        public virtual DbSet<vw_clientes_prestamos> vw_clientes_prestamos { get; set; }
        public virtual DbSet<vw_direccion> vw_direccion { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_cliente(Nullable<int> id, string n_identificacion, string tipo_identificacion, string primer_nombre, string segundo_nombre, string primer_apellido, string segundo_apellido, Nullable<int> id_direccion, string estado, string accion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var n_identificacionParameter = n_identificacion != null ?
                new ObjectParameter("n_identificacion", n_identificacion) :
                new ObjectParameter("n_identificacion", typeof(string));
    
            var tipo_identificacionParameter = tipo_identificacion != null ?
                new ObjectParameter("tipo_identificacion", tipo_identificacion) :
                new ObjectParameter("tipo_identificacion", typeof(string));
    
            var primer_nombreParameter = primer_nombre != null ?
                new ObjectParameter("primer_nombre", primer_nombre) :
                new ObjectParameter("primer_nombre", typeof(string));
    
            var segundo_nombreParameter = segundo_nombre != null ?
                new ObjectParameter("segundo_nombre", segundo_nombre) :
                new ObjectParameter("segundo_nombre", typeof(string));
    
            var primer_apellidoParameter = primer_apellido != null ?
                new ObjectParameter("primer_apellido", primer_apellido) :
                new ObjectParameter("primer_apellido", typeof(string));
    
            var segundo_apellidoParameter = segundo_apellido != null ?
                new ObjectParameter("segundo_apellido", segundo_apellido) :
                new ObjectParameter("segundo_apellido", typeof(string));
    
            var id_direccionParameter = id_direccion.HasValue ?
                new ObjectParameter("id_direccion", id_direccion) :
                new ObjectParameter("id_direccion", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("accion", accion) :
                new ObjectParameter("accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_cliente", idParameter, n_identificacionParameter, tipo_identificacionParameter, primer_nombreParameter, segundo_nombreParameter, primer_apellidoParameter, segundo_apellidoParameter, id_direccionParameter, estadoParameter, accionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_direccion(Nullable<int> id, string descripcion, string accion, ObjectParameter pid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("accion", accion) :
                new ObjectParameter("accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_direccion", idParameter, descripcionParameter, accionParameter, pid);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_prestamo(Nullable<int> n_prestamo, string tipo_prestamo, Nullable<int> id_cliente, Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_fin, Nullable<decimal> monto_solicitado, string moneda, Nullable<int> plazo_financiamiento, string estado, string accion)
        {
            var n_prestamoParameter = n_prestamo.HasValue ?
                new ObjectParameter("n_prestamo", n_prestamo) :
                new ObjectParameter("n_prestamo", typeof(int));
    
            var tipo_prestamoParameter = tipo_prestamo != null ?
                new ObjectParameter("tipo_prestamo", tipo_prestamo) :
                new ObjectParameter("tipo_prestamo", typeof(string));
    
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var monto_solicitadoParameter = monto_solicitado.HasValue ?
                new ObjectParameter("monto_solicitado", monto_solicitado) :
                new ObjectParameter("monto_solicitado", typeof(decimal));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var plazo_financiamientoParameter = plazo_financiamiento.HasValue ?
                new ObjectParameter("plazo_financiamiento", plazo_financiamiento) :
                new ObjectParameter("plazo_financiamiento", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var accionParameter = accion != null ?
                new ObjectParameter("accion", accion) :
                new ObjectParameter("accion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_prestamo", n_prestamoParameter, tipo_prestamoParameter, id_clienteParameter, fecha_inicioParameter, fecha_finParameter, monto_solicitadoParameter, monedaParameter, plazo_financiamientoParameter, estadoParameter, accionParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
